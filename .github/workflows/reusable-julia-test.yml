name: Reusable Julia Test

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
        description: 'Name of the package to test'
    secrets:
      CODECOV_TOKEN:
        required: false

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.package-name }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ inputs.package-name }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1'
          - 'pre'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - 'default'
          - 'x86'
        exclude:
          - os: macos-latest
            arch: 'x86'
          - os: macos-latest
            version: '1.10'
          - os: macos-latest
            version: 'pre'
          - os: windows-latest
            version: '1.10'
          - os: windows-latest
            version: 'pre'
          - os: ubuntu-latest
            version: '1.10'
            arch: 'x86'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
          project: ${{ inputs.package-name }}
      - uses: julia-actions/cache@v2
      - name: Run the tests
        shell: julia --color=yes {0}
        run: |
          using Pkg
          using TOML
          Pkg.Registry.update()
          Pkg.activate(;temp=true)
          # force it to use this PR's version of the package
          ENV["JULIA_PKG_DEVDIR"]= mktempdir()
          Pkg.develop(unique([
            (;path="${{ inputs.package-name }}"),
            (;path="ChunkCodecCore"),
            (;path="ChunkCodecTests"),
          ]))
          Pkg.update()
          Pkg.test(TOML.parsefile("${{ inputs.package-name }}/Project.toml")["name"]; coverage=true, allow_reresolve=false)
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: ${{ inputs.package-name }}/src
      - uses: codecov/codecov-action@v4
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
